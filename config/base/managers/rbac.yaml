---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rbac-manager
rules:
  # This rule should be removed for clusters that are 1.12 and greater. At that
  # point the subsequent rules that provide the escalate privilege will be
  # sufficient to permit management of role and clusterrole bindings without
  # granting superuser privileges.
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - clusterrolebindings
    verbs:
      - "*"  # this should include escalated in 1.12 and greater
  - apiGroups:
      - rbac.crd.gocardless.com
    resources:
      - "*"
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - "*"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rbac-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rbac-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rbac-manager
subjects:
  - kind: ServiceAccount
    name: rbac-manager
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rbac-manager
  labels:
    group: rbac.crd.gocardless.com
spec:
  serviceName: rbac-manager
  volumeClaimTemplates: []
  selector:
    matchLabels:
      group: rbac.crd.gocardless.com
  template:
    metadata:
      labels:
        group: rbac.crd.gocardless.com
    spec:
      serviceAccountName: rbac-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: google-application-credentials
          secret:
            secretName: theatre-google-application-credentials
      containers:
        - command:
            - /usr/local/bin/rbac-manager
          args:
            - --google  # enable GoogleGroup resolution
            - --metrics-address=0.0.0.0
          image: gcr.io/duffel-shared/theatre:latest
          imagePullPolicy: Always
          name: manager
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/run/secrets/google/credentials.json
          volumeMounts:
            - mountPath: /var/run/secrets/google
              name: google-application-credentials
              readOnly: true
          ports:
            - name: metrics
              containerPort: 9525
          resources:
            limits:
              cpu: 500m
              memory: 100Mi
